{"version":3,"file":"repository.min.js","sources":["../src/repository.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Repository helper for the Moodle Tiny Autosave plugin.\n *\n * @module      tiny_autosave/repository\n * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {call} from 'core/ajax';\nimport * as Options from './options';\nimport Pending from 'core/pending';\nimport {ensureEditorIsValid} from 'editor_tiny/utils';\n\nconst fetchOne = (methodname, args) => call([{\n    methodname,\n    args,\n}])[0];\n\n/**\n * Resume an Autosave session.\n *\n * @param {TinyMCE} editor The TinyMCE editor instance\n * @returns {Promise<AutosaveSession>} The Autosave session\n */\nexport const resumeAutosaveSession = (editor) => {\n    if (!ensureEditorIsValid(editor)) {\n        return Promise.reject('Invalid editor');\n    }\n    const pendingPromise = new Pending('tiny_autosave/repository:resumeAutosaveSession');\n    return fetchOne('tiny_autosave_resume_session', {\n        contextid: Options.getContextId(editor),\n        pagehash: Options.getPageHash(editor),\n        pageinstance: Options.getPageInstance(editor),\n        elementid: editor.targetElm.id,\n        draftid: Options.getDraftItemId(editor),\n    })\n    .then((result) => {\n        pendingPromise.resolve();\n        return result;\n    });\n};\n\n/**\n * Update the content of the Autosave session.\n *\n * @param {TinyMCE} editor The TinyMCE editor instance\n * @returns {Promise<AutosaveSession>} The Autosave session\n */\nexport const updateAutosaveSession = (editor) => {\n    if (!ensureEditorIsValid(editor)) {\n        return Promise.reject('Invalid editor');\n    }\n\n    const pendingPromise = new Pending('tiny_autosave/repository:updateAutosaveSession');\n\n    return fetchOne('tiny_autosave_update_session', {\n        contextid: Options.getContextId(editor),\n        pagehash: Options.getPageHash(editor),\n        pageinstance: Options.getPageInstance(editor),\n        elementid: editor.targetElm.id,\n        drafttext: editor.getContent(),\n    })\n    .then((result) => {\n        pendingPromise.resolve();\n        return result;\n    });\n};\n\n/**\n * Remove the Autosave session.\n *\n * @param {TinyMCE} editor The TinyMCE editor instance\n * @returns {Promise<AutosaveSession>} The Autosave session\n */\nexport const removeAutosaveSession = (editor) => {\n    if (!ensureEditorIsValid(editor)) {\n        return Promise.reject('Invalid editor');\n    }\n\n    return fetchOne('tiny_autosave_reset_session', {\n        contextid: Options.getContextId(editor),\n        pagehash: Options.getPageHash(editor),\n        pageinstance: Options.getPageInstance(editor),\n        elementid: editor.targetElm.id,\n    });\n};\n"],"names":["fetchOne","methodname","args","editor","Promise","reject","pendingPromise","Pending","contextid","Options","getContextId","pagehash","getPageHash","pageinstance","getPageInstance","elementid","targetElm","id","draftid","getDraftItemId","then","result","resolve","drafttext","getContent"],"mappings":";;;;;;;+EA4BMA,SAAW,CAACC,WAAYC,QAAS,cAAK,CAAC,CACzCD,WAAAA,WACAC,KAAAA,QACA,kCAQkCC,cAC7B,8BAAoBA,eACdC,QAAQC,OAAO,wBAEpBC,eAAiB,IAAIC,iBAAQ,yDAC5BP,SAAS,+BAAgC,CAC5CQ,UAAWC,QAAQC,aAAaP,QAChCQ,SAAUF,QAAQG,YAAYT,QAC9BU,aAAcJ,QAAQK,gBAAgBX,QACtCY,UAAWZ,OAAOa,UAAUC,GAC5BC,QAAST,QAAQU,eAAehB,UAEnCiB,MAAMC,SACHf,eAAegB,UACRD,0CAUuBlB,cAC7B,8BAAoBA,eACdC,QAAQC,OAAO,wBAGpBC,eAAiB,IAAIC,iBAAQ,yDAE5BP,SAAS,+BAAgC,CAC5CQ,UAAWC,QAAQC,aAAaP,QAChCQ,SAAUF,QAAQG,YAAYT,QAC9BU,aAAcJ,QAAQK,gBAAgBX,QACtCY,UAAWZ,OAAOa,UAAUC,GAC5BM,UAAWpB,OAAOqB,eAErBJ,MAAMC,SACHf,eAAegB,UACRD,0CAUuBlB,SAC7B,8BAAoBA,QAIlBH,SAAS,8BAA+B,CAC3CQ,UAAWC,QAAQC,aAAaP,QAChCQ,SAAUF,QAAQG,YAAYT,QAC9BU,aAAcJ,QAAQK,gBAAgBX,QACtCY,UAAWZ,OAAOa,UAAUC,KAPrBb,QAAQC,OAAO"}